services:
  frontend:
    build: ./frontend
    ports:
      - '3000:3000'
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3000
      NODE_ENV: production
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build: ./backend
    ports:
      - '3001:3001'
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/mydb
      NEXTAUTH_URL: http://localhost:3001
      STRIPE_SECRET_KEY: sk_test_xxx
      NODE_ENV: production
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
    networks:
      - app-network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
