services:
  frontend:
    build: 
      context: ./frontend
      args:
        - NODE_ENV=${NODE_ENV}
    environment:
      - NODE_ENV=${NODE_ENV}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    volumes:
      - ./frontend:/frontend
      - ./node_modules:/frontend/node_modules
    depends_on:
      - backend
    networks:
      - app-network
    ports:
      - '3000:3000'

  backend:
    build: 
      context: ./backend
      args:
        - NODE_ENV=${NODE_ENV}
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
    volumes:
      - ./backend:/backend
      - ./node_modules:/backend/node_modules
    depends_on:
      - postgres
    networks:
      - app-network
    ports:
      - '3001:3001'
      
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - app-network

  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge